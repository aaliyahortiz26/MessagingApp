@model MessagingApp.Models.TopicTemplateModel
@{
    // Use login layout under View->Shared folder
    Layout = "_Layout";
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/Chat_StyleSheet/TopicTemplateStyleSheet.css" />
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script type="text/javascript" language="Javascript">
        $(document).ready(function () {
            $("#refreshMessages").load(window.location.href + " #refreshMessages");
            setInterval(function () {
                $("#refreshMessages").load(window.location.href + " #refreshMessages");
            }, 2000);
        });
    </script>
</head>
<body>
    <style>
        body{
            background-image: @DBObject.Bcolor;
        }
        p {
            color:@DBObject.Tcolor;
        }

    </style>
    <div class="LeftSideButton">
        <img id="LoginLogo" src="/Images/Logo.png" />

        <button id="ProfileButton" type="submit" onclick="location.href='@Url.Action("Profile", "Home")'">Profile</button>
        <button id="TopicSearchButton" type="submit" onclick="location.href='@Url.Action("TopicSearch", "Chat")'">Search For Topics</button>
        <button id="CreateGroupButton" type="button" onclick="location.href='@Url.Action("CreateGroupScreen", "Chat")'">Create Group</button>
        <button id="ContactsButton" type="submit" onclick="location.href='@Url.Action("Contacts", "Home")'">Contacts</button>

        <h2>Joined Groups</h2>
        <div id="ScrollBoxGroup">
            @{
                for (int i = 0; i < HomeModel.m_grouplist.Count; i++)
                {
                    <button id="groupButtons" name="button" type="submit" value="@HomeModel.m_grouplist[i]" onclick="location.href='@Url.Action("GroupTemplate", "Chat")?name=@HomeModel.m_grouplist[i]'">@HomeModel.m_grouplist[i]</button>;
                }
            }
        </div>
        <h2>Topic Joined Groups</h2>
        <div id="ScrollBoxTopic">
            @{
                for (int j = 0; j < HomeModel.m_topiclist.Count; j++)
                {
                    <button id="topicButtons" name="button" type="submit" value="@HomeModel.m_topiclist[j]" onclick="location.href='@Url.Action("TopicTemplate", "Chat")?name=@HomeModel.m_topiclist[j]'">@HomeModel.m_topiclist[j] </button>;
                }
            }
        </div>
    </div>
    <div class="RightSide">
        <form class="messageArea" asp-action="TopicTemplate" method="post">
            <button type="button" onclick="location.href='@Url.Action("removeTopic", "Chat")'">Leave Topic </button>
            <button class="goHomeButton" type="button" onclick="location.href='@Url.Action("Home", "Home")'">Home</button>
            <h1 id="topicName">Group Name: @TopicTemplateModel.m_topicName</h1>

            @{List<string> discussionAndQuestion = new List<string>();
                discussionAndQuestion = ViewData["discussionAndQuestion"] as List<string>;
            }
            <h2 id="topicDescription">Description: @discussionAndQuestion[0]</h2>
            <h2 id="topicQuestion">Question: @discussionAndQuestion[1]</h2>

            <div class="scrollMessages">
                <div id="refreshMessages">
                    @{
                        List<Messages> topicMessagelist = new List<Messages>();
                        topicMessagelist = ViewData["messageobjects"] as List<Messages>;
                        for (int i = 0; i < topicMessagelist.Count(); i++)
                        {
                                        <p>
                                            <label>@topicMessagelist[i].GetUsername() says @topicMessagelist[i].GetMessage() </label>
                                            <button style="width: 114px; height: 25px; margin-top: 0px; color: darkred; background-color:yellow; font-size: 16px;" type="button" onclick="location.href='@Url.Action("PinnedMessagestopic", "Chat", new {message = @topicMessagelist[i].GetMessage()})'">Pin Message </button>
                                            <button style="width: 114px; height: 25px; margin-top: 0px; color: darkred; background-color:yellow; font-size: 16px;" type="button" onclick="location.href='@Url.Action("RemovePinnedMessagestopic", "Chat", new {message = @topicMessagelist[i].GetMessage()})'"> Remove Pinned Message </button>
                                            @if (topicMessagelist[i].GetUsername() == DBObject.m_username)
                                            {
                                                <button style="width: 66px; height: 45px; margin-top: 0px; color: white; background-color:crimson; font-size: 16px;" type="button" dis onclick="location.href='@Url.Action("RemoveMessagesTopic", "Chat", new {message = @topicMessagelist[i].GetMessage(), messageID = topicMessagelist[i].GetMessageID()})'">Delete</button>
                                            }
                                        </p>
                        }
                    }
                    <p>
                        <label id="messagesLabelNotFromDatabase"></label>
                    </p>
                </div>
            </div>
        </form>



        <form class="right contactArea" asp-action="TopicTemplate" method="post">
            <div class="fields">
                <p>
                    <h2 id="contactAreaLabel">Contacts</h2>
                    <br />
                </p>
                @{
                    List<string> users = new List<string>();
                    users = ViewData["users"] as List<string>;
                    for (int i = 0; i < users.Count(); i++)
                    {
                        <p>
                            <h3>@users[i] </h3>
                        </p>
                    }
                }


                <dl>
                </dl>
            </div>
        </form>




        <form id="reset" class="centered sendMessageArea" asp-action="TopicTemplate" method="post">



            <div class="fields">
                <br>
                <textarea id="messageTextArea" type="text" placeholder="Enter Message"></textarea>

                <button id="sendTopicMessageButton" type="button" value="Send Message" onclick="timeFunction()">Send Message</button>

                <script>

                    function timeFunction() {
                        var idleInterval = setTimeout("reset()", 30);
                    }


                    function reset() {
                        document.getElementById("reset").reset()
                    }

                </script>
            </div>
        </form>
    </div>

</body>
</html>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/topicChat.js"></script>